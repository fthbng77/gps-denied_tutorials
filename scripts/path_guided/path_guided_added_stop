#!/usr/bin/env python
import time
import math
import rospy
from std_msgs.msg import Float32, String  # Import String message type
from pymavlink import mavutil
from pymavlink_functions import PymavlinkFunctions

class MyDrone(PymavlinkFunctions):
    def __init__(self, connection_string):
        super(MyDrone, self).__init__(connection_string)
        self.set_mode('GUIDED')
        time.sleep(1)
        self.arm()
        time.sleep(10)
        self.takeoff(5)
        time.sleep(10)
        self.error_count = 0  # Initialize error count

    def stop(self):
        self.send_command(0, 0, 0)
        self.land()
        self.disarm()
        print("Drone landed, stopped, and disarmed.")

# Cube Orange ile bağlantıyı başlat
drone = MyDrone('udpin:localhost:14550')

def distance_callback(msg):
    # distance mesajını işleyin ve drone'un yönünü ayarlayın
    distance_in_pixels = msg.data
    print(f"Distance received: {distance_in_pixels}")
    
    # Yaw hareketi yap
    if abs(distance_in_pixels) > 30:
        if distance_in_pixels < 0:
            drone.condition_yaw(1, True, 1)
        elif distance_in_pixels > 0:
            drone.condition_yaw(1, True, -1)

def error_callback(msg):
    drone.error_count += 1
    print(f"Error received: {msg.data}")
    
    if drone.error_count >= 10:
        print("Too many errors, stopping the drone.")
        drone.land()
        drone.stop()
        rospy.signal_shutdown("Too many errors")

def main():
    rospy.init_node("drone_controller", anonymous=True)
    # /tracking_deviation ve /tracking_error konularına abone olun
    rospy.Subscriber("/tracking_deviation", Float32, distance_callback)
    rospy.Subscriber("/tracking_error", String, error_callback)

    rate = rospy.Rate(1)  # 1 Hz
    while not rospy.is_shutdown():
        if drone.error_count >= 10:
            break

        drone.send_command(1, 0, 0)  # 1 m/s forward velocity
        print("Moving forward")
        rate.sleep()

if __name__ == "__main__":
    try:
        main()
    except rospy.ROSInterruptException:
        pass
